# vi: set sw=4 ts=4:

=head1 NAME

BusyBox - The Swiss Army Knife of Embedded Linux

=head1 SYNTAX

 busybox <applet> [arguments...]  # or

 <applet> [arguments...]	  # if symlinked

=head1 DESCRIPTION

BusyBox combines tiny versions of many common UNIX utilities into a single
small executable. It provides minimalist replacements for most of the utilities
you usually find in GNU coreutils, util-linux, etc. The utilities in BusyBox
generally have fewer options than their full-featured GNU cousins; however, the
options that are included provide the expected functionality and behave very
much like their GNU counterparts.

BusyBox has been written with size-optimization and limited resources in mind.
It is also extremely modular so you can easily include or exclude commands (or
features) at compile time. This makes it easy to customize your embedded
systems. To create a working system, just add /dev, /etc, and a Linux kernel.
BusyBox provides a fairly complete POSIX environment for any small or embedded
system.

BusyBox is extremely configurable.  This allows you to include only the
components you need, thereby reducing binary size. Run 'make config' or 'make
menuconfig' to select the functionality that you wish to enable.  Then run
'make' to compile BusyBox using your configuration.

After the compile has finished, you should use 'make install' to install
BusyBox. This will install the 'bin/busybox' binary, in the target directory
specified by CONFIG_PREFIX. CONFIG_PREFIX can be set when configuring BusyBox,
or you can specify an alternative location at install time (i.e., with a
command line like 'make CONFIG_PREFIX=/tmp/foo install'). If you enabled
any applet installation scheme (either as symlinks or hardlinks), these will
also be installed in the location pointed to by CONFIG_PREFIX.

=head1 USAGE

BusyBox is a multi-call binary.  A multi-call binary is an executable program
that performs the same job as more than one utility program.  That means there
is just a single BusyBox binary, but that single binary acts like a large
number of utilities.  This allows BusyBox to be smaller since all the built-in
utility programs (we call them applets) can share code for many common
operations.

You can also invoke BusyBox by issuing a command as an argument on the
command line.  For example, entering

	/bin/busybox ls

will also cause BusyBox to behave as 'ls'.

Of course, adding '/bin/busybox' into every command would be painful.  So most
people will invoke BusyBox using links to the BusyBox binary.

For example, entering

	ln -s /bin/busybox ls
	./ls

will cause BusyBox to behave as 'ls' (if the 'ls' command has been compiled
into BusyBox).  Generally speaking, you should never need to make all these
links yourself, as the BusyBox build system will do this for you when you run
the 'make install' command.

If you invoke BusyBox with no arguments, it will provide you with a list of the
applets that have been compiled into your BusyBox binary.

=head1 COMMON OPTIONS

Most BusyBox applets support the B<--help> argument to provide a terse runtime
description of their behavior.  If the CONFIG_FEATURE_VERBOSE_USAGE option has
been enabled, more detailed usage information will also be available.

=head1 COMMANDS

Currently available applets include:

	[, [[, arp, ash, awk, basename, blkid, cat, chmod, chown, chpasswd,
	clear, cmp, cp, crond, cut, date, dd, devmem, df, dirname, dmesg,
	du, echo, egrep, env, ether-wake, expr, fdisk, fgrep, find, flock,
	free, fsck.minix, fsync, grep, gunzip, gzip, head, ifconfig, insmod,
	ionice, kill, killall, klogd, less, ln, logger, login, ls, lsmod,
	lsusb, md5sum, mdev, mkdir, mke2fs, mkfs.ext2, mkfs.ext3, mknod,
	mkswap, modprobe, more, mount, mv, netstat, nice, nohup, nslookup,
	pidof, ping, ping6, printf, ps, pwd, readlink, renice, rm, rmdir,
	rmmod, route, sed, setconsole, sh, sleep, sort, strings, swapoff,
	swapon, sync, syslogd, tail, tar, telnetd, test, top, touch, tr,
	traceroute, traceroute6, true, tune2fs, udhcpc, umount, uname,
	unzip, uptime, usleep, vconfig, vi, watch, wc, which, zcat, zcip

=head1 COMMAND DESCRIPTIONS

=over 4

=item B<arp>

arp 
[-vn]	[-H HWTYPE] [-i IF] -a [HOSTNAME]
[-v]		    [-i IF] -d HOSTNAME [pub]
[-v]	[-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [temp]
[-v]	[-H HWTYPE] [-i IF] -s HOSTNAME HWADDR [netmask MASK] pub
[-v]	[-H HWTYPE] [-i IF] -Ds HOSTNAME IFACE [netmask MASK] pub

Manipulate ARP cache

Options:

	-a		Display (all) hosts
	-s		Set new ARP entry
	-d		Delete a specified entry
	-v		Verbose
	-n		Don't resolve names
	-i IF		Network interface
	-D		Read <hwaddr> from given device
	-A, -p AF	Protocol family
	-H HWTYPE	Hardware address type

=item B<awk>

awk [OPTIONS] [AWK_PROGRAM] [FILE]...

Options:

	-v VAR=VAL	Set variable
	-F SEP		Use SEP as field separator
	-f FILE		Read program from FILE

=item B<basename>

basename FILE [SUFFIX]

Strip directory path and .SUFFIX from FILE


=item B<blkid>

blkid 

Print UUIDs of all filesystems

=item B<cat>

cat [FILE]...

Concatenate FILEs and print them to stdout

=item B<chmod>

chmod [-R] MODE[,MODE]... FILE...

Each MODE is one or more of the letters ugoa, one of the
symbols +-= and one or more of the letters rwxst

Options:

	-R	Recurse

=item B<chown>

chown [-RhLHP]... OWNER[<.|:>[GROUP]] FILE...

Change the owner and/or group of each FILE to OWNER and/or GROUP

Options:

	-R	Recurse
	-h	Affect symlinks instead of symlink targets
	-L	Traverse all symlinks to directories
	-H	Traverse symlinks on command line only
	-P	Don't traverse symlinks (default)

=item B<chpasswd>

chpasswd [--md5|--encrypted]

Read user:password from stdin and update /etc/passwd

Options:

	-e,--encrypted	Supplied passwords are in encrypted form
	-m,--md5	Use MD5 encryption instead of DES

=item B<clear>

clear 

Clear screen

=item B<cmp>

cmp [-l] [-s] FILE1 [FILE2]

Compare FILE1 with FILE2 (or stdin)

Options:

	-l	Write the byte numbers (decimal) and values (octal)
		for all differing bytes
	-s	Quiet

=item B<cp>

cp [OPTIONS] SOURCE DEST

Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY

Options:

	-a	Same as -dpR
	-R,-r	Recurse
	-d,-P	Preserve symlinks (default if -R)
	-L	Follow all symlinks
	-H	Follow symlinks on command line
	-p	Preserve file attributes if possible
	-f	Overwrite
	-i	Prompt before overwrite
	-l,-s	Create (sym)links

=item B<crond>

crond -fbS -l N -L LOGFILE -c DIR

	-f	Foreground
	-b	Background (default)
	-S	Log to syslog (default)
	-l	Set log level. 0 is the most verbose, default 8
	-L	Log to file
	-c	Working dir

=item B<cut>

cut [OPTIONS] [FILE]...

Print selected fields from each input FILE to stdout

Options:

	-b LIST	Output only bytes from LIST
	-c LIST	Output only characters from LIST
	-d CHAR	Use CHAR instead of tab as the field delimiter
	-s	Output only the lines containing delimiter
	-f N	Print only these fields
	-n	Ignored

=item B<date>

date [OPTIONS] [+FMT] [TIME]

Display time (using +FMT), or set time

Options:

	[-s,--set] TIME	Set time to TIME
	-u,--utc	Work in UTC (don't convert to local time)
	-R,--rfc-2822	Output RFC-2822 compliant date string
	-I[SPEC]	Output ISO-8601 compliant date string
			SPEC='date' (default) for date only,
			'hours', 'minutes', or 'seconds' for date and
			time to the indicated precision
	-r,--reference FILE	Display last modification time of FILE
	-d,--date TIME	Display TIME, not 'now'
	-D FMT		Use FMT for -d TIME conversion

Recognized TIME formats:

	hh:mm[:ss]
	[YYYY.]MM.DD-hh:mm[:ss]
	YYYY-MM-DD hh:mm[:ss]
	[[[[[YY]YY]MM]DD]hh]mm[.ss]

=item B<dd>

dd [if=FILE] [of=FILE] [ibs=N] [obs=N] [bs=N] [count=N] [skip=N]
	[seek=N] [conv=notrunc|noerror|sync|fsync]

Copy a file with converting and formatting

Options:

	if=FILE		Read from FILE instead of stdin
	of=FILE		Write to FILE instead of stdout
	bs=N		Read and write N bytes at a time
	ibs=N		Read N bytes at a time
	obs=N		Write N bytes at a time
	count=N		Copy only N input blocks
	skip=N		Skip N input blocks
	seek=N		Skip N output blocks
	conv=notrunc	Don't truncate output file
	conv=noerror	Continue after read errors
	conv=sync	Pad blocks with zeros
	conv=fsync	Physically write data out before finishing

Numbers may be suffixed by c (x1), w (x2), b (x512), kD (x1000), k (x1024),
MD (x1000000), M (x1048576), GD (x1000000000) or G (x1073741824)

=item B<devmem>

devmem ADDRESS [WIDTH [VALUE]]

Read/write from physical address

	ADDRESS	Address to act upon
	WIDTH	Width (8/16/...)
	VALUE	Data to be written

=item B<df>

df [-Pkmh] [FILESYSTEM]...

Print filesystem usage statistics

Options:

	-P	POSIX output format
	-k	1024-byte blocks (default)
	-m	1M-byte blocks
	-h	Human readable (e.g. 1K 243M 2G)

=item B<dirname>

dirname FILENAME

Strip non-directory suffix from FILENAME

=item B<dmesg>

dmesg [-c] [-n LEVEL] [-s SIZE]

Print or control the kernel ring buffer

Options:

	-c		Clear ring buffer after printing
	-n LEVEL	Set console logging level
	-s SIZE		Buffer size

=item B<du>

du [-aHLdclsxhmk] [FILE]...

Summarize disk space used for each FILE and/or directory.
Disk space is printed in units of 1024 bytes.

Options:

	-a	Show file sizes too
	-L	Follow all symlinks
	-H	Follow symlinks on command line
	-d N	Limit output to directories (and files with -a) of depth < N
	-c	Show grand total
	-l	Count sizes many times if hard linked
	-s	Display only a total for each argument
	-x	Skip directories on different filesystems
	-h	Sizes in human readable format (e.g., 1K 243M 2G )
	-m	Sizes in megabytes
	-k	Sizes in kilobytes (default)

=item B<echo>

echo [-neE] [ARG]...

Print the specified ARGs to stdout

Options:

	-n	Suppress trailing newline
	-e	Interpret backslash escapes (i.e., \t=tab)
	-E	Don't interpret backslash escapes (default)

=item B<env>

env [-iu] [-] [name=value]... [PROG ARGS]

Print the current environment or run PROG after setting up
the specified environment

Options:

	-, -i	Start with an empty environment
	-u	Remove variable from the environment

=item B<ether-wake>

ether-wake [-b] [-i iface] [-p aa:bb:cc:dd[:ee:ff]] MAC

Send a magic packet to wake up sleeping machines.
MAC must be a station address (00:11:22:33:44:55) or
a hostname with a known 'ethers' entry.

Options:

	-b		Send wake-up packet to the broadcast address
	-i iface	Interface to use (default eth0)
	-p pass		Append four or six byte password PW to the packet

=item B<expr>

expr EXPRESSION

Print the value of EXPRESSION to stdout

EXPRESSION may be:

	ARG1 | ARG2	ARG1 if it is neither null nor 0, otherwise ARG2
	ARG1 & ARG2	ARG1 if neither argument is null or 0, otherwise 0
	ARG1 < ARG2	1 if ARG1 is less than ARG2, else 0. Similarly:
	ARG1 <= ARG2
	ARG1 = ARG2
	ARG1 != ARG2
	ARG1 >= ARG2
	ARG1 > ARG2
	ARG1 + ARG2	Sum of ARG1 and ARG2. Similarly:
	ARG1 - ARG2
	ARG1 * ARG2
	ARG1 / ARG2
	ARG1 % ARG2
	STRING : REGEXP		Anchored pattern match of REGEXP in STRING
	match STRING REGEXP	Same as STRING : REGEXP
	substr STRING POS LENGTH Substring of STRING, POS counted from 1
	index STRING CHARS	Index in STRING where any CHARS is found, or 0
	length STRING		Length of STRING
	quote TOKEN		Interpret TOKEN as a string, even if
				it is a keyword like 'match' or an
				operator like '/'
	(EXPRESSION)		Value of EXPRESSION

Beware that many operators need to be escaped or quoted for shells.
Comparisons are arithmetic if both ARGs are numbers, else
lexicographical. Pattern matches return the string matched between
\( and \) or null; if \( and \) are not used, they return the number
of characters matched or 0.

=item B<fdisk>

fdisk [-ul] [-C CYLINDERS] [-H HEADS] [-S SECTORS] [-b SSZ] DISK

Change partition table

Options:

	-u		Start and End are in sectors (instead of cylinders)
	-l		Show partition table for each DISK, then exit
	-b 2048		(for certain MO disks) use 2048-byte sectors
	-C CYLINDERS	Set number of cylinders/heads/sectors
	-H HEADS
	-S SECTORS

=item B<find>

find [PATH]... [EXPRESSION]

Search for files. The default PATH is the current directory,
default EXPRESSION is '-print'

EXPRESSION may consist of:

	-follow		Follow symlinks
	-mindepth N	Don't act on first N levels
	-name PATTERN	File name (w/o directory name) matches PATTERN
	-iname PATTERN	Case insensitive -name
	-mtime DAYS	Modified time is greater than (+N), less than (-N),
			or exactly N days
	-print		Print (default and assumed)
	-print0		Delimit output with null characters rather than
			newlines
	-exec CMD ARG ;	Run CMD with all instances of {} replaced by the
			matching files

=item B<flock>

flock [-sxun] FD|{FILE [-c] PROG ARGS}

[Un]lock file descriptor, or lock FILE, run PROG

Options:

	-s	Shared lock
	-x	Exclusive lock (default)
	-u	Unlock FD
	-n	Fail rather than wait

=item B<free>

free 

Display the amount of free and used system memory

=item B<fsck.minix>

fsck.minix [-larvsmf] BLOCKDEV

Check MINIX filesystem

Options:

	-l	List all filenames
	-r	Perform interactive repairs
	-a	Perform automatic repairs
	-v	Verbose
	-s	Output superblock information
	-m	Show "mode not cleared" warnings
	-f	Force file system check

=item B<fsync>

fsync [OPTIONS] FILE...

Write files' buffered blocks to disk

Options:

	-d	Avoid syncing metadata

=item B<grep>

grep [-HhnlLoqvsriwFE] [-m N] [-A/B/C N] PATTERN/-e PATTERN.../-f FILE [FILE]...

Search for PATTERN in FILEs (or stdin)

Options:

	-H	Add 'filename:' prefix
	-h	Do not add 'filename:' prefix
	-n	Add 'line_no:' prefix
	-l	Show only names of files that match
	-L	Show only names of files that don't match
	-c	Show only count of matching lines
	-o	Show only the matching part of line
	-q	Quiet. Return 0 if PATTERN is found, 1 otherwise
	-v	Select non-matching lines
	-s	Suppress open and read errors
	-r	Recurse
	-i	Ignore case
	-w	Match whole words only
	-F	PATTERN is a literal (not regexp)
	-E	PATTERN is an extended regexp
	-m N	Match up to N times per file
	-A N	Print N lines of trailing context
	-B N	Print N lines of leading context
	-C N	Same as '-A N -B N'
	-e PTRN	Pattern to match
	-f FILE	Read pattern from file

=item B<gunzip>

gunzip [OPTIONS] [FILE]...

Decompress FILEs (or stdin)

Options:

	-c	Write to stdout
	-f	Force
	-t	Test file integrity

=item B<gzip>

gzip [OPTIONS] [FILE]...

Compress FILEs (or stdin)

Options:

	-d	Decompress
	-c	Write to stdout
	-f	Force

=item B<head>

head [OPTIONS] [FILE]...

Print first 10 lines of each FILE (or stdin) to stdout.
With more than one FILE, precede each with a filename header.

Options:

	-n N[kbm]	Print first N lines
	-c N[kbm]	Print first N bytes
	-q		Never print headers
	-v		Always print headers

N may be suffixed by k (x1024), b (x512), or m (x1024^2).

=item B<ifconfig>

ifconfig [-a] interface [address]

Configure a network interface

Options:

	[add ADDRESS[/PREFIXLEN]]
	[del ADDRESS[/PREFIXLEN]]
	[[-]broadcast [ADDRESS]] [[-]pointopoint [ADDRESS]]
	[netmask ADDRESS] [dstaddr ADDRESS]
	[hw ether ADDRESS] [metric NN] [mtu NN]
	[[-]trailers] [[-]arp] [[-]allmulti]
	[multicast] [[-]promisc] [txqueuelen NN] [[-]dynamic]
	[up|down] ...

=item B<insmod>

insmod FILE [symbol=value]...

Load the specified kernel modules into the kernel

=item B<ionice>

ionice [-c 1-3] [-n 0-7] [-p PID] [PROG]

Change I/O priority and class

Options:

	-c	Class. 1:realtime 2:best-effort 3:idle
	-n	Priority

=item B<kill>

kill [-l] [-SIG] PID...

Send a signal (default: TERM) to given PIDs

Options:

	-l	List all signal names and numbers

=item B<killall>

killall [-l] [-q] [-SIG] PROCESS_NAME...

Send a signal (default: TERM) to given processes

Options:

	-l	List all signal names and numbers
	-q	Don't complain if no processes were killed

=item B<klogd>

klogd [-c N] [-n]

Kernel logger

Options:

	-c N	Only messages with level < N are printed to console
	-n	Run in foreground

=item B<less>

less [-EMNmh~I?] [FILE]...

View FILE (or stdin) one screenful at a time

Options:

	-E	Quit once the end of a file is reached
	-M,-m	Display status line with line numbers
		and percentage through the file
	-N	Prefix line number to each line
	-I	Ignore case in all searches
	-~	Suppress ~s displayed past the end of the file

=item B<ln>

ln [OPTIONS] TARGET... LINK|DIR

Create a link LINK or DIR/TARGET to the specified TARGET(s)

Options:

	-s	Make symlinks instead of hardlinks
	-f	Remove existing destinations
	-n	Don't dereference symlinks - treat like normal file
	-b	Make a backup of the target (if exists) before link operation
	-S suf	Use suffix instead of ~ when making backup files

=item B<logger>

logger [OPTIONS] [MESSAGE]

Write MESSAGE (or stdin) to syslog

Options:

	-s	Log to stderr as well as the system log
	-c	Log to console as well as the system log
	-t TAG	Log using the specified tag (defaults to user name)
	-p PRIO	Priority (numeric or facility.level pair)

=item B<login>

login [-p] [-h HOST] [[-f] USER]

Begin a new session on the system

Options:

	-f	Don't authenticate (user already authenticated)
	-h	Name of the remote host
	-p	Preserve environment

=item B<ls>

ls [-1AacCdeFilnpLRrSsTtuvwxXhk] [FILE]...

List directory contents

Options:

	-1	List in a single column
	-A	Don't list . and ..
	-a	Don't hide entries starting with .
	-C	List by columns
	-c	With -l: sort by ctime
	--color[={always,never,auto}]	Control coloring
	-d	List directory entries instead of contents
	-e	List full date and time
	-F	Append indicator (one of */=@|) to entries
	-i	List inode numbers
	-l	Long listing format
	-n	List numeric UIDs and GIDs instead of names
	-p	Append indicator (one of /=@|) to entries
	-L	List entries pointed to by symlinks
	-R	Recurse
	-r	Sort in reverse order
	-S	Sort by file size
	-s	List the size of each file, in blocks
	-T N	Assume tabstop every N columns
	-t	With -l: sort by modification time
	-u	With -l: sort by access time
	-v	Sort by version
	-w N	Assume the terminal is N columns wide
	-x	List by lines
	-X	Sort by extension
	-h	List sizes in human readable format (1K 243M 2G)

=item B<lsmod>

lsmod 

List the currently loaded kernel modules

=item B<md5sum>

md5sum [OPTIONS] [FILE]...
   or: md5sum [OPTIONS] -c [FILE]

Print or check MD5 checksums

Options:

	-c	Check sums against given list
	-s	Don't output anything, status code shows success
	-w	Warn about improperly formatted checksum lines

=item B<mdev>

mdev [-s]

	-s	Scan /sys and populate /dev during system boot

It can be run by kernel as a hotplug helper. To activate it:
 echo /sbin/mdev > /proc/sys/kernel/hotplug


=item B<mkdir>

mkdir [OPTIONS] DIRECTORY...

Create DIRECTORY

Options:

	-m	Mode
	-p	No error if exists; make parent directories as needed

=item B<mke2fs>

mke2fs [-c|-l filename] [-b block-size] [-f fragment-size] [-g blocks-per-group] [-i bytes-per-inode] [-j] [-J journal-options] [-N number-of-inodes] [-n] [-m reserved-blocks-percentage] [-o creator-os] [-O feature[,...]] [-q] [r fs-revision-level] [-E extended-options] [-v] [-F] [-L volume-label] [-M last-mounted-directory] [-S] [-T filesystem-type] device [blocks-count]

	-b size		Block size in bytes
	-c		Check for bad blocks before creating
	-E opts		Set extended options
	-f size		Fragment size in bytes
	-F		Force (ignore sanity checks)
	-g num		Number of blocks in a block group
	-i ratio	The bytes/inode ratio
	-j		Create a journal (ext3)
	-J opts		Set journal options (size/device)
	-l file		Read bad blocks list from file
	-L lbl		Set the volume label
	-m percent	Percent of fs blocks to reserve for admin
	-M dir		Set last mounted directory
	-n		Do not actually create anything
	-N num		Number of inodes to create
	-o os		Set the 'creator os' field
	-O features	Dir_index/filetype/has_journal/journal_dev/sparse_super
	-q		Quiet
	-r rev		Set filesystem revision
	-S		Write superblock and group descriptors only
	-T fs-type	Set usage type (news/largefile/largefile4)
	-v		Verbose

=item B<mkfs.ext2>

mkfs.ext2 [-c|-l filename] [-b block-size] [-f fragment-size] [-g blocks-per-group] [-i bytes-per-inode] [-j] [-J journal-options] [-N number-of-inodes] [-n] [-m reserved-blocks-percentage] [-o creator-os] [-O feature[,...]] [-q] [r fs-revision-level] [-E extended-options] [-v] [-F] [-L volume-label] [-M last-mounted-directory] [-S] [-T filesystem-type] device [blocks-count]

	-b size		Block size in bytes
	-c		Check for bad blocks before creating
	-E opts		Set extended options
	-f size		Fragment size in bytes
	-F		Force (ignore sanity checks)
	-g num		Number of blocks in a block group
	-i ratio	The bytes/inode ratio
	-j		Create a journal (ext3)
	-J opts		Set journal options (size/device)
	-l file		Read bad blocks list from file
	-L lbl		Set the volume label
	-m percent	Percent of fs blocks to reserve for admin
	-M dir		Set last mounted directory
	-n		Do not actually create anything
	-N num		Number of inodes to create
	-o os		Set the 'creator os' field
	-O features	Dir_index/filetype/has_journal/journal_dev/sparse_super
	-q		Quiet
	-r rev		Set filesystem revision
	-S		Write superblock and group descriptors only
	-T fs-type	Set usage type (news/largefile/largefile4)
	-v		Verbose

=item B<mkfs.ext3>

mkfs.ext3 [-c|-l filename] [-b block-size] [-f fragment-size] [-g blocks-per-group] [-i bytes-per-inode] [-j] [-J journal-options] [-N number-of-inodes] [-n] [-m reserved-blocks-percentage] [-o creator-os] [-O feature[,...]] [-q] [r fs-revision-level] [-E extended-options] [-v] [-F] [-L volume-label] [-M last-mounted-directory] [-S] [-T filesystem-type] device [blocks-count]

	-b size		Block size in bytes
	-c		Check for bad blocks before creating
	-E opts		Set extended options
	-f size		Fragment size in bytes
	-F		Force (ignore sanity checks)
	-g num		Number of blocks in a block group
	-i ratio	The bytes/inode ratio
	-j		Create a journal (ext3)
	-J opts		Set journal options (size/device)
	-l file		Read bad blocks list from file
	-L lbl		Set the volume label
	-m percent	Percent of fs blocks to reserve for admin
	-M dir		Set last mounted directory
	-n		Do not actually create anything
	-N num		Number of inodes to create
	-o os		Set the 'creator os' field
	-O features	Dir_index/filetype/has_journal/journal_dev/sparse_super
	-q		Quiet
	-r rev		Set filesystem revision
	-S		Write superblock and group descriptors only
	-T fs-type	Set usage type (news/largefile/largefile4)
	-v		Verbose

=item B<mknod>

mknod [OPTIONS] NAME TYPE MAJOR MINOR

Create a special file (block, character, or pipe)

Options:

	-m	Create the special file using the specified mode (default a=rw)
TYPEs include:

	b:	Make a block device
	c or u:	Make a character device
	p:	Make a named pipe (MAJOR and MINOR are ignored)

=item B<mkswap>

mkswap [OPTIONS] BLOCKDEV [KBYTES]

Prepare BLOCKDEV to be used as swap partition

Options:

	-L LBL	Label

=item B<modprobe>

modprobe [-alrqvs] MODULE [symbol=value]...

Options:

	-a	Load multiple MODULEs
	-l	List (MODULE is a pattern)
	-r	Remove MODULE (stacks) or do autoclean
	-q	Quiet
	-v	Verbose
	-s	Log to syslog

=item B<more>

more [FILE]...

View FILE (or stdin) one screenful at a time

=item B<mount>

mount [OPTIONS] [-o OPTS] DEVICE NODE

Mount a filesystem. Filesystem autodetection requires /proc.

Options:

	-a		Mount all filesystems in fstab
	-i		Don't run mount helper
	-r		Read-only mount
	-w		Read-write mount (default)
	-t FSTYPE	Filesystem type
	-O OPT		Mount only filesystems with option OPT (-a only)
-o OPT:
	loop		Ignored (loop devices are autodetected)
	[a]sync		Writes are [a]synchronous
	[no]atime	Disable/enable updates to inode access times
	[no]diratime	Disable/enable atime updates to directories
	[no]relatime	Disable/enable atime updates relative to modification time
	[no]dev		(Dis)allow use of special device files
	[no]exec	(Dis)allow use of executable files
	[no]suid	(Dis)allow set-user-id-root programs
	[r]shared	Convert [recursively] to a shared subtree
	[r]slave	Convert [recursively] to a slave subtree
	[r]private	Convert [recursively] to a private subtree
	[un]bindable	Make mount point [un]able to be bind mounted
	bind		Bind a file or directory to another location
	move		Relocate an existing mount point
	remount		Remount a mounted filesystem, changing flags
	ro/rw		Same as -r/-w

There are filesystem-specific -o flags.

=item B<mv>

mv [OPTIONS] SOURCE DEST
or: mv [OPTIONS] SOURCE... DIRECTORY

Rename SOURCE to DEST, or move SOURCE(s) to DIRECTORY

Options:

	-f	Don't prompt before overwriting
	-i	Interactive, prompt before overwrite

=item B<netstat>

netstat [-laentuwxrW]

Display networking information

Options:

	-l	Display listening server sockets
	-a	Display all sockets (default: connected)
	-e	Display other/more information
	-n	Don't resolve names
	-t	Tcp sockets
	-u	Udp sockets
	-w	Raw sockets
	-x	Unix sockets
	-r	Display routing table
	-W	Display with no column truncation

=item B<nice>

nice [-n ADJUST] [PROG ARGS]

Change scheduling priority, run PROG

Options:

	-n ADJUST	Adjust priority by ADJUST

=item B<nohup>

nohup PROG ARGS

Run PROG immune to hangups, with output to a non-tty

=item B<nslookup>

nslookup [HOST] [SERVER]

Query the nameserver for the IP address of the given HOST
optionally using a specified DNS server

=item B<pidof>

pidof [NAME]...

List PIDs of all processes with names that match NAMEs

=item B<ping>

ping [OPTIONS] HOST

Send ICMP ECHO_REQUEST packets to network hosts

Options:

	-4, -6		Force IP or IPv6 name resolution
	-c CNT		Send only CNT pings
	-s SIZE		Send SIZE data bytes in packets (default:56)
	-t TTL		Set TTL
	-I IFACE/IP	Use interface or IP address as source
	-M hint		Path MTU Discovery strategy [do|want|dont]
	-W SEC		Seconds to wait for the first response (default:10)
			(after all -c CNT packets are sent)
	-w SEC		Seconds until ping exits (default:infinite)
			(can exit earlier with -c CNT)
	-q		Quiet, only displays output at start
			and when finished

=item B<ping6>

ping6 [OPTIONS] HOST

Send ICMP ECHO_REQUEST packets to network hosts

Options:

	-c CNT		Send only CNT pings
	-s SIZE		Send SIZE data bytes in packets (default:56)
	-t TTL		Set TTL
	-I IFACE/IP	Use interface or IP address as source
	-M hint		Path MTU Discovery strategy [do|want|dont]
	-q		Quiet, only displays output at start
			and when finished

=item B<printf>

printf FORMAT [ARGUMENT]...

Format and print ARGUMENT(s) according to FORMAT,
where FORMAT controls the output exactly as in C printf

=item B<ps>

ps 

Show list of processes

Options:

	w	Wide output

=item B<pwd>

pwd 

Print the full filename of the current working directory

=item B<readlink>

readlink [-fnv] FILE

Display the value of a symlink

Options:

	-f	Canonicalize by following all symlinks
	-n	Don't add newline
	-v	Verbose

=item B<renice>

renice {{-n INCREMENT} | PRIORITY} [[-p | -g | -u] ID...]

Change scheduling priority for a running process

Options:

	-n	Adjust current nice value (smaller is faster)
	-p	Process id(s) (default)
	-g	Process group id(s)
	-u	Process user name(s) and/or id(s)

=item B<rm>

rm [OPTIONS] FILE...

Remove (unlink) FILEs

Options:

	-i	Always prompt before removing
	-f	Never prompt
	-R,-r	Recurse

=item B<rmdir>

rmdir [OPTIONS] DIRECTORY...

Remove DIRECTORY if it is empty

Options:

	-p	Include parents

=item B<rmmod>

rmmod [OPTIONS] [MODULE]...

Unload the specified kernel modules from the kernel

Options:

	-w	Wait until the module is no longer used
	-f	Force unloading
	-a	Remove all unused modules (recursively)

=item B<route>

route [{add|del|delete}]

Edit kernel routing tables

Options:

	-n	Don't resolve names
	-e	Display other/more information
	-A inet{6}	Select address family

=item B<sed>

sed [-efinr] SED_CMD [FILE]...

Options:

	-e CMD	Add CMD to sed commands to be executed
	-f FILE	Add FILE contents to sed commands to be executed
	-i	Edit files in-place (else sends result to stdout)
	-n	Suppress automatic printing of pattern space
	-r	Use extended regex syntax

If no -e or -f, the first non-option argument is the sed command string.
Remaining arguments are input files (stdin if none).

=item B<setconsole>

setconsole [-r] [DEVICE]

Redirect system console output to DEVICE (default: /dev/tty)

Options:

	-r	Reset output to /dev/console

=item B<sleep>

sleep [N]...

Pause for a time equal to the total of the args given, where each arg can
have an optional suffix of (s)econds, (m)inutes, (h)ours, or (d)ays

=item B<sort>

sort [-nrugMcszbdfimSTokt] [-o FILE] [-k start[.offset][opts][,end[.offset][opts]] [-t CHAR] [FILE]...

Sort lines of text

Options:

	-b	Ignore leading blanks
	-c	Check whether input is sorted
	-d	Dictionary order (blank or alphanumeric only)
	-f	Ignore case
	-g	General numerical sort
	-i	Ignore unprintable characters
	-k	Sort key
	-M	Sort month
	-n	Sort numbers
	-o	Output to file
	-k	Sort by key
	-t CHAR	Key separator
	-r	Reverse sort order
	-s	Stable (don't sort ties alphabetically)
	-u	Suppress duplicate lines
	-z	Lines are terminated by NUL, not newline
	-mST	Ignored for GNU compatibility

=item B<strings>

strings [-afo] [-n LEN] [FILE]...

Display printable strings in a binary file

Options:

	-a	Scan whole file (default)
	-f	Precede strings with filenames
	-n LEN	At least LEN characters form a string (default 4)
	-o	Precede strings with decimal offsets

=item B<swapoff>

swapoff [-a] [DEVICE]

Stop swapping on DEVICE

Options:

	-a	Stop swapping on all swap devices

=item B<swapon>

swapon [-a] [DEVICE]

Start swapping on DEVICE

Options:

	-a	Start swapping on all swap devices

=item B<sync>

sync 

Write all buffered blocks to disk

=item B<syslogd>

syslogd [OPTIONS]

System logging utility.
This version of syslogd ignores /etc/syslog.conf

Options:

	-n		Run in foreground
	-O FILE		Log to given file (default:/var/log/messages)
	-l N		Set local log level
	-S		Smaller logging output
	-s SIZE		Max size (KB) before rotate (default:200KB, 0=off)
	-b N		N rotated logs to keep (default:1, max=99, 0=purge)
	-R HOST[:PORT]	Log to IP or hostname on PORT (default PORT=514/UDP)
	-L		Log locally and via network (default is network only if -R)

=item B<tail>

tail [OPTIONS] [FILE]...

Print last 10 lines of each FILE (or stdin) to stdout.
With more than one FILE, precede each with a filename header.

Options:

	-f		Print data as file grows
	-s SECONDS	Wait SECONDS between reads with -f
	-n N[kbm]	Print last N lines
	-c N[kbm]	Print last N bytes
	-q		Never print headers
	-v		Always print headers

N may be suffixed by k (x1024), b (x512), or m (x1024^2).
If N starts with a '+', output begins with the Nth item from the start
of each file, not from the end.

=item B<tar>

tar -[cxtzjvO] [-X FILE] [-f TARFILE] [-C DIR] [FILE]...

Create, extract, or list files from a tar file

Operation:

	c	Create
	x	Extract
	t	List
Options:

	f	Name of TARFILE ('-' for stdin/out)
	C	Change to DIR before operation
	v	Verbose
	z	(De)compress using gzip
	j	(De)compress using bzip2
	O	Extract to stdout
	h	Follow symlinks
	X	File with names to exclude
	T	File with names to include

=item B<telnetd>

telnetd [OPTIONS]

Handle incoming telnet connections

Options:

	-l LOGIN	Exec LOGIN on connect
	-f ISSUE_FILE	Display ISSUE_FILE instead of /etc/issue
	-K		Close connection as soon as login exits
			(normally wait until all programs close slave pty)
	-p PORT		Port to listen on
	-b ADDR[:PORT]	Address to bind to
	-F		Run in foreground
	-i		Inetd mode

=item B<test>

test EXPRESSION ]

Check file types, compare values etc. Return a 0/1 exit code
depending on logical value of EXPRESSION

=item B<top>

top [-b] [-nCOUNT] [-dSECONDS]

Provide a view of process activity in real time.
Read the status of all processes from /proc each SECONDS
and display a screenful of them.

=item B<touch>

touch [-c] [-d DATE] FILE [FILE]...

Update the last-modified date on the given FILE[s]

Options:

	-c	Don't create files
	-d DT	Date/time to use

=item B<tr>

tr [-cds] STRING1 [STRING2]

Translate, squeeze, or delete characters from stdin, writing to stdout

Options:

	-c	Take complement of STRING1
	-d	Delete input characters coded STRING1
	-s	Squeeze multiple output characters of STRING2 into one character

=item B<traceroute>

traceroute [-46FIldnrv] [-f 1ST_TTL] [-m MAXTTL] [-p PORT] [-q PROBES]
	[-s SRC_IP] [-t TOS] [-w WAIT_SEC] [-g GATEWAY] [-i IFACE]
	[-z PAUSE_MSEC] HOST [BYTES]

Trace the route to HOST

Options:

	-4, -6	Force IP or IPv6 name resolution
	-F	Set the don't fragment bit
	-I	Use ICMP ECHO instead of UDP datagrams
	-l	Display the TTL value of the returned packet
	-d	Set SO_DEBUG options to socket
	-n	Print numeric addresses
	-r	Bypass routing tables, send directly to HOST
	-v	Verbose
	-m	Max time-to-live (max number of hops)
	-p	Base UDP port number used in probes
		(default 33434)
	-q	Number of probes per TTL (default 3)
	-s	IP address to use as the source address
	-t	Type-of-service in probe packets (default 0)
	-w	Time in seconds to wait for a response (default 3)
	-g	Loose source route gateway (8 max)

=item B<traceroute6>

traceroute6 [-dnrv] [-m MAXTTL] [-p PORT] [-q PROBES]
	[-s SRC_IP] [-t TOS] [-w WAIT_SEC] [-i IFACE]
	HOST [BYTES]

Trace the route to HOST

Options:

	-d	Set SO_DEBUG options to socket
	-n	Print numeric addresses
	-r	Bypass routing tables, send directly to HOST
	-v	Verbose
	-m	Max time-to-live (max number of hops)
	-p	Base UDP port number used in probes
		(default is 33434)
	-q	Number of probes per TTL (default 3)
	-s	IP address to use as the source address
	-t	Type-of-service in probe packets (default 0)
	-w	Time in seconds to wait for a response (default 3)

=item B<true>

true 

Return an exit code of TRUE (0)

=item B<tune2fs>

tune2fs [-c MOUNT_CNT] [-i DAYS] [-L LABEL] BLOCKDEV

Adjust filesystem options on ext[23] filesystems

=item B<udhcpc>

udhcpc [-fbqRB] [-a[MSEC]] [-t N] [-T SEC] [-A SEC/-n]
	[-i IFACE] [-s PROG] [-p PIDFILE]
	[-oC] [-r IP] [-V VENDOR] [-F NAME] [-x OPT:VAL]... [-O OPT]...

	-i,--interface IFACE	Interface to use (default eth0)
	-s,--script PROG	Run PROG at DHCP events (default /tmp/udhcpc)
	-p,--pidfile FILE	Create pidfile
	-B,--broadcast		Request broadcast replies
	-t,--retries N		Send up to N discover packets (default 3)
	-T,--timeout SEC	Pause between packets (default 3)
	-A,--tryagain SEC	Wait if lease is not obtained (default 20)
	-n,--now		Exit if lease is not obtained
	-q,--quit		Exit after obtaining lease
	-R,--release		Release IP on exit
	-f,--foreground		Run in foreground
	-b,--background		Background if lease is not obtained
	-S,--syslog		Log to syslog too
	-a[MSEC],--arping[=MSEC] Validate offered address with ARP ping
	-r,--request IP		Request this IP address
	-o,--no-default-options	Don't request any options (unless -O is given)
	-O,--request-option OPT	Request option OPT from server (cumulative)
	-x OPT:VAL		Include option OPT in sent packets (cumulative)
				Examples of string, numeric, and hex byte opts:
				-x hostname:bbox - option 12
				-x lease:3600 - option 51 (lease time)
				-x 0x3d:0100BEEFC0FFEE - option 61 (client id)
	-F,--fqdn NAME		Ask server to update DNS mapping for NAME
	-V,--vendorclass VENDOR	Vendor identifier (default 'udhcp VERSION')
	-C,--clientid-none	Don't send MAC as client identifier
Signals:

	USR1	Renew lease
	USR2	Release lease

=item B<umount>

umount [OPTIONS] FILESYSTEM|DIRECTORY

Unmount file systems

Options:

	-r	Try to remount devices as read-only if mount is busy
	-l	Lazy umount (detach filesystem)
	-f	Force umount (i.e., unreachable NFS server)
	-d	Free loop device if it has been used

=item B<uname>

uname [-amnrspv]

Print system information

Options:

	-a	Print all
	-m	The machine (hardware) type
	-n	Hostname
	-r	OS release
	-s	OS name (default)
	-p	Processor type
	-v	OS version

=item B<unzip>

unzip [-opts[modifiers]] FILE[.zip] [LIST] [-x XLIST] [-d DIR]

Extract files from ZIP archives

Options:

	-l	List archive contents (with -q for short form)
	-n	Never overwrite files (default)
	-o	Overwrite
	-p	Send output to stdout
	-q	Quiet
	-x XLST	Exclude these files
	-d DIR	Extract files into DIR

=item B<uptime>

uptime 

Display the time since the last boot

=item B<usleep>

usleep N

Pause for N microseconds

=item B<vconfig>

vconfig COMMAND [OPTIONS]

Create and remove virtual ethernet devices

Options:

	add		[interface-name] [vlan_id]
	rem		[vlan-name]
	set_flag	[interface-name] [flag-num] [0 | 1]
	set_egress_map	[vlan-name] [skb_priority] [vlan_qos]
	set_ingress_map	[vlan-name] [skb_priority] [vlan_qos]
	set_name_type	[name-type]

=item B<vi>

vi [OPTIONS] [FILE]...

Edit FILE

Options:

	-c	Initial command to run ($EXINIT also available)
	-R	Read-only
	-H	Short help regarding available features

=item B<watch>

watch [-n SEC] [-t] PROG ARGS

Run PROG periodically

Options:

	-n	Loop period in seconds (default 2)
	-t	Don't print header

=item B<wc>

wc [-cmlwL] [FILE]...

Count lines, words, and bytes for each FILE (or stdin)

Options:

	-c	Count bytes
	-m	Count characters
	-l	Count newlines
	-w	Count words
	-L	Print longest line length

=item B<which>

which [COMMAND]...

Locate a COMMAND

=item B<zcat>

zcat FILE

Decompress to stdout

=item B<zcip>

zcip [OPTIONS] IFACE SCRIPT

Manage a ZeroConf IPv4 link-local address

	-f		Run in foreground
	-q		Quit after obtaining address
	-r 169.254.x.x	Request this address first
	-l x.x.0.0	Use this range instead of 169.254
	-p FILE		Create pidfile
	-v		Verbose

With no -q, runs continuously monitoring for ARP conflicts,
exits only on I/O errors (link down etc)

=back

=head1 LIBC NSS

GNU Libc (glibc) uses the Name Service Switch (NSS) to configure the behavior
of the C library for the local environment, and to configure how it reads
system data, such as passwords and group information.  This is implemented
using an /etc/nsswitch.conf configuration file, and using one or more of the
/lib/libnss_* libraries.  BusyBox tries to avoid using any libc calls that make
use of NSS.  Some applets however, such as login and su, will use libc functions
that require NSS.

If you enable CONFIG_USE_BB_PWD_GRP, BusyBox will use internal functions to
directly access the /etc/passwd, /etc/group, and /etc/shadow files without
using NSS.  This may allow you to run your system without the need for
installing any of the NSS configuration files and libraries.

When used with glibc, the BusyBox 'networking' applets will similarly require
that you install at least some of the glibc NSS stuff (in particular,
/etc/nsswitch.conf, /lib/libnss_dns*, /lib/libnss_files*, and /lib/libresolv*).

Shameless Plug: As an alternative, one could use a C library such as uClibc.  In
addition to making your system significantly smaller, uClibc does not require the
use of any NSS support files or libraries.

=head1 MAINTAINER

Denis Vlasenko <vda.linux@googlemail.com>

=head1 AUTHORS

The following people have contributed code to BusyBox whether they know it or
not.  If you have written code included in BusyBox, you should probably be
listed here so you can obtain your bit of eternal glory.  If you should be
listed here, or the description of what you have done needs more detail, or is
incorrect, please send in an update.


=for html <br>

Emanuele Aina <emanuele.aina@tiscali.it>
    run-parts

=for html <br>

Erik Andersen <andersen@codepoet.org>

    Tons of new stuff, major rewrite of most of the
    core apps, tons of new apps as noted in header files.
    Lots of tedious effort writing these boring docs that
    nobody is going to actually read.

=for html <br>

Laurence Anderson <l.d.anderson@warwick.ac.uk>

    rpm2cpio, unzip, get_header_cpio, read_gz interface, rpm

=for html <br>

Jeff Angielski <jeff@theptrgroup.com>

    ftpput, ftpget

=for html <br>

Edward Betts <edward@debian.org>

    expr, hostid, logname, whoami

=for html <br>

John Beppu <beppu@codepoet.org>

    du, nslookup, sort

=for html <br>

Brian Candler <B.Candler@pobox.com>

    tiny-ls(ls)

=for html <br>

Randolph Chung <tausq@debian.org>

    fbset, ping, hostname

=for html <br>

Dave Cinege <dcinege@psychosis.com>

    more(v2), makedevs, dutmp, modularization, auto links file,
    various fixes, Linux Router Project maintenance

=for html <br>

Jordan Crouse <jordan@cosmicpenguin.net>

    ipcalc

=for html <br>

Magnus Damm <damm@opensource.se>

    tftp client insmod powerpc support

=for html <br>

Larry Doolittle <ldoolitt@recycle.lbl.gov>

    pristine source directory compilation, lots of patches and fixes.

=for html <br>

Glenn Engel <glenne@engel.org>

    httpd

=for html <br>

Gennady Feldman <gfeldman@gena01.com>

    Sysklogd (single threaded syslogd, IPC Circular buffer support,
    logread), various fixes.

=for html <br>

Karl M. Hegbloom <karlheg@debian.org>

    cp_mv.c, the test suite, various fixes to utility.c, &c.

=for html <br>

Daniel Jacobowitz <dan@debian.org>

    mktemp.c

=for html <br>

Matt Kraai <kraai@alumni.cmu.edu>

    documentation, bugfixes, test suite

=for html <br>

Stephan Linz <linz@li-pro.net>

    ipcalc, Red Hat equivalence

=for html <br>

John Lombardo <john@deltanet.com>

    tr

=for html <br>

Glenn McGrath <bug1@iinet.net.au>

    Common unarchiving code and unarchiving applets, ifupdown, ftpgetput,
    nameif, sed, patch, fold, install, uudecode.
    Various bugfixes, review and apply numerous patches.

=for html <br>

Manuel Novoa III <mjn3@codepoet.org>

    cat, head, mkfifo, mknod, rmdir, sleep, tee, tty, uniq, usleep, wc, yes,
    mesg, vconfig, make_directory, parse_mode, dirname, mode_string,
    get_last_path_component, simplify_path, and a number trivial libbb routines

    also bug fixes, partial rewrites, and size optimizations in
    ash, basename, cal, cmp, cp, df, du, echo, env, ln, logname, md5sum, mkdir,
    mv, realpath, rm, sort, tail, touch, uname, watch, arith, human_readable,
    interface, dutmp, ifconfig, route

=for html <br>

Vladimir Oleynik <dzo@simtreas.ru>

    cmdedit; xargs(current), httpd(current);
    ports: ash, crond, fdisk, inetd, stty, traceroute, top;
    locale, various fixes
    and irreconcilable critic of everything not perfect.

=for html <br>

Bruce Perens <bruce@pixar.com>

    Original author of BusyBox in 1995, 1996. Some of his code can
    still be found hiding here and there...

=for html <br>

Tim Riker <Tim@Rikers.org>

    bug fixes, member of fan club

=for html <br>

Kent Robotti <robotti@metconnect.com>

    reset, tons and tons of bug reports and patches.

=for html <br>

Chip Rosenthal <chip@unicom.com>, <crosenth@covad.com>

    wget - Contributed by permission of Covad Communications

=for html <br>

Pavel Roskin <proski@gnu.org>

    Lots of bugs fixes and patches.

=for html <br>

Gyepi Sam <gyepi@praxis-sw.com>

    Remote logging feature for syslogd

=for html <br>

Linus Torvalds <torvalds@transmeta.com>

    mkswap, fsck.minix, mkfs.minix

=for html <br>

Mark Whitley <markw@codepoet.org>

    grep, sed, cut, xargs(previous),
    style-guide, new-applet-HOWTO, bug fixes, etc.

=for html <br>

Charles P. Wright <cpwright@villagenet.com>

    gzip, mini-netcat(nc)

=for html <br>

Enrique Zanardi <ezanardi@ull.es>

    tarcat (since removed), loadkmap, various fixes, Debian maintenance

=for html <br>

Tito Ragusa <farmatito@tiscali.it>

    devfsd and size optimizations in strings, openvt and deallocvt.

=cut

